// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package com.raze.coleadmin.domain;

import com.raze.coleadmin.catalog.CorreoNotificacionesDataOnDemand;
import com.raze.coleadmin.domain.DomicilioDataOnDemand;
import com.raze.coleadmin.domain.Escuela;
import com.raze.coleadmin.domain.EscuelaDataOnDemand;
import com.raze.coleadmin.domain.Usuario;
import com.raze.coleadmin.repository.EscuelaRepository;
import com.raze.coleadmin.service.EscuelaService;
import java.security.SecureRandom;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Date;
import java.util.GregorianCalendar;
import java.util.Iterator;
import java.util.List;
import java.util.Random;
import javax.validation.ConstraintViolation;
import javax.validation.ConstraintViolationException;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Component;

privileged aspect EscuelaDataOnDemand_Roo_DataOnDemand {
    
    declare @type: EscuelaDataOnDemand: @Component;
    
    private Random EscuelaDataOnDemand.rnd = new SecureRandom();
    
    private List<Escuela> EscuelaDataOnDemand.data;
    
    @Autowired
    CorreoNotificacionesDataOnDemand EscuelaDataOnDemand.correoNotificacionesDataOnDemand;
    
    @Autowired
    DomicilioDataOnDemand EscuelaDataOnDemand.domicilioDataOnDemand;
    
    @Autowired
    EscuelaService EscuelaDataOnDemand.escuelaService;
    
    @Autowired
    EscuelaRepository EscuelaDataOnDemand.escuelaRepository;
    
    public Escuela EscuelaDataOnDemand.getNewTransientEscuela(int index) {
        Escuela obj = new Escuela();
        setActivo(obj, index);
        setFechaCreacion(obj, index);
        setFechaModificacion(obj, index);
        setLogo(obj, index);
        setNombre(obj, index);
        setRazonSocial(obj, index);
        setUsuarioCrea(obj, index);
        setUsuarioModifica(obj, index);
        setWeb(obj, index);
        return obj;
    }
    
    public void EscuelaDataOnDemand.setActivo(Escuela obj, int index) {
        Boolean activo = Boolean.TRUE;
        obj.setActivo(activo);
    }
    
    public void EscuelaDataOnDemand.setFechaCreacion(Escuela obj, int index) {
        Date fechaCreacion = new GregorianCalendar(Calendar.getInstance().get(Calendar.YEAR), Calendar.getInstance().get(Calendar.MONTH), Calendar.getInstance().get(Calendar.DAY_OF_MONTH), Calendar.getInstance().get(Calendar.HOUR_OF_DAY), Calendar.getInstance().get(Calendar.MINUTE), Calendar.getInstance().get(Calendar.SECOND) + new Double(Math.random() * 1000).intValue()).getTime();
        obj.setFechaCreacion(fechaCreacion);
    }
    
    public void EscuelaDataOnDemand.setFechaModificacion(Escuela obj, int index) {
        Date fechaModificacion = new GregorianCalendar(Calendar.getInstance().get(Calendar.YEAR), Calendar.getInstance().get(Calendar.MONTH), Calendar.getInstance().get(Calendar.DAY_OF_MONTH), Calendar.getInstance().get(Calendar.HOUR_OF_DAY), Calendar.getInstance().get(Calendar.MINUTE), Calendar.getInstance().get(Calendar.SECOND) + new Double(Math.random() * 1000).intValue()).getTime();
        obj.setFechaModificacion(fechaModificacion);
    }
    
    public void EscuelaDataOnDemand.setLogo(Escuela obj, int index) {
        byte[] logo = String.valueOf(index).getBytes();
        obj.setLogo(logo);
    }
    
    public void EscuelaDataOnDemand.setNombre(Escuela obj, int index) {
        String nombre = "nombre_" + index;
        obj.setNombre(nombre);
    }
    
    public void EscuelaDataOnDemand.setRazonSocial(Escuela obj, int index) {
        String razonSocial = "razonSocial_" + index;
        obj.setRazonSocial(razonSocial);
    }
    
    public void EscuelaDataOnDemand.setUsuarioCrea(Escuela obj, int index) {
        Usuario usuarioCrea = null;
        obj.setUsuarioCrea(usuarioCrea);
    }
    
    public void EscuelaDataOnDemand.setUsuarioModifica(Escuela obj, int index) {
        Usuario usuarioModifica = null;
        obj.setUsuarioModifica(usuarioModifica);
    }
    
    public void EscuelaDataOnDemand.setWeb(Escuela obj, int index) {
        String web = "web_" + index;
        obj.setWeb(web);
    }
    
    public Escuela EscuelaDataOnDemand.getSpecificEscuela(int index) {
        init();
        if (index < 0) {
            index = 0;
        }
        if (index > (data.size() - 1)) {
            index = data.size() - 1;
        }
        Escuela obj = data.get(index);
        Long id = obj.getId();
        return escuelaService.findEscuela(id);
    }
    
    public Escuela EscuelaDataOnDemand.getRandomEscuela() {
        init();
        Escuela obj = data.get(rnd.nextInt(data.size()));
        Long id = obj.getId();
        return escuelaService.findEscuela(id);
    }
    
    public boolean EscuelaDataOnDemand.modifyEscuela(Escuela obj) {
        return false;
    }
    
    public void EscuelaDataOnDemand.init() {
        int from = 0;
        int to = 10;
        data = escuelaService.findEscuelaEntries(from, to);
        if (data == null) {
            throw new IllegalStateException("Find entries implementation for 'Escuela' illegally returned null");
        }
        if (!data.isEmpty()) {
            return;
        }
        
        data = new ArrayList<Escuela>();
        for (int i = 0; i < 10; i++) {
            Escuela obj = getNewTransientEscuela(i);
            try {
                escuelaService.saveEscuela(obj);
            } catch (final ConstraintViolationException e) {
                final StringBuilder msg = new StringBuilder();
                for (Iterator<ConstraintViolation<?>> iter = e.getConstraintViolations().iterator(); iter.hasNext();) {
                    final ConstraintViolation<?> cv = iter.next();
                    msg.append("[").append(cv.getRootBean().getClass().getName()).append(".").append(cv.getPropertyPath()).append(": ").append(cv.getMessage()).append(" (invalid value = ").append(cv.getInvalidValue()).append(")").append("]");
                }
                throw new IllegalStateException(msg.toString(), e);
            }
            escuelaRepository.flush();
            data.add(obj);
        }
    }
    
}
